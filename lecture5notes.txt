Lecture 5 Notes - Javascript

- Javascript Introduction
Include script tags <script> [code] </script>
ex:: alert('Hello, world!');

- Events
Anything the user does -> events; event listener/ handlers
> function in javascript:
function hello() {
	alert('Hello, world!');
}
<button onclick="hello()">Click Here</button>

- Variables
let counter = 0;
function count() {
	counter ++;
	alert(counter);
}

- Document Query Selector
document.querySelector('h1').innerHTML = 'Goodbye!'
*Note: use '===' to check strict equality in javascript (values and data type), '==' only for value
let/const heading = document.querySelector('h1') (if const, it should not change)
> alert(`Count is now ${counter}`); (template literal; different implementation from python)

- Document Query Listener
document.addEventListener('DOMContentLoaded', function(){
	document.querySelector('button').onclick = count; #equiv to .addEventListener('click', count);
}) #run after whole DOM is fully loaded

- Seperating Javascript in a seperate file
ex: make file counter.js, copy the javascript to that file
<script src="counter.js"></script>
querySelector('tag')/('#id')/('.class')

- DOM
ex:
document.addEventListener('DOMContentLoaded', function(){
	document.querySelector('form').onsubmit=function(){
		const name = document.querySelector('#name').value;
		alert(`Hello, ${name}!`);j
	};
});
ex: document.querySelector('#hello').style.color = 'blue';
ex: document.querySelectorAll('button'): return an array of all that matches the query
.forEach(function(button){ #alt: button => { (shorthand for creating function; input => function)
	button.onclick=function(){
		document.querySelector('#hello').style.color = button.dataset.color;
	}
)};
* .onchange: for drop down list
* console.log(task); (print in the javascript console)
> creating new element: const li = document.createElement('li');
li.innerHTML = task;
* interval: SetInterval(function, x ms)

- Local Storage (store and retrieve information)
localStorage.getItem(key)
localStorage.setItem(key, value)
ex:
if (!locatStorage.getItem('counter')){
	localStorage.setItem('counter', 0);
}
* inspect > application > local storage

- Application Programming Interface (API)
JSON (Javascript Object Notation)
fetch & return response.json()
if not in a object > return undefined
> If API goes wrong:
.catch(error => {
	console.log('Error:', error);
};